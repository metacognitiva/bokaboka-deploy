import { drizzle } from "drizzle-orm/mysql2";
import { professionals, categories } from "../drizzle/schema";

const db = drizzle(process.env.DATABASE_URL!);

// Lista completa de profiss√µes aut√¥nomas
const CATEGORIES_DATA = [
  { name: "Psic√≥logo", icon: "üß†" },
  { name: "Pintor", icon: "üé®" },
  { name: "Eletricista", icon: "‚ö°" },
  { name: "Encanador", icon: "üîß" },
  { name: "Designer Gr√°fico", icon: "‚ú®" },
  { name: "Fot√≥grafo", icon: "üì∏" },
  { name: "Personal Trainer", icon: "üí™" },
  { name: "Professor Particular", icon: "üìö" },
  { name: "Jardineiro", icon: "üå±" },
  { name: "Mec√¢nico", icon: "üî©" },
  { name: "Advogado", icon: "‚öñÔ∏è" },
  { name: "Contador", icon: "üìä" },
  { name: "Arquiteto", icon: "üèõÔ∏è" },
  { name: "Engenheiro Civil", icon: "üèóÔ∏è" },
  { name: "Desenvolvedor Web", icon: "üíª" },
  { name: "Marketing Digital", icon: "üì±" },
  { name: "Consultor Financeiro", icon: "üí∞" },
  { name: "Nutricionista", icon: "ü•ó" },
  { name: "Fisioterapeuta", icon: "üè•" },
  { name: "Dentista", icon: "ü¶∑" },
  { name: "Veterin√°rio", icon: "üêæ" },
  { name: "Cabeleireiro", icon: "üíá" },
  { name: "Manicure", icon: "üíÖ" },
  { name: "Maquiador", icon: "üíÑ" },
  { name: "Barbeiro", icon: "‚úÇÔ∏è" },
  { name: "Massagista", icon: "üíÜ" },
  { name: "Chef de Cozinha", icon: "üë®‚Äçüç≥" },
  { name: "Confeiteiro", icon: "üç∞" },
  { name: "Padeiro", icon: "ü•ñ" },
  { name: "Costureira", icon: "üßµ" },
  { name: "Alfaiate", icon: "üëî" },
  { name: "Sapateiro", icon: "üëû" },
  { name: "Marceneiro", icon: "ü™ö" },
  { name: "Serralheiro", icon: "üî®" },
  { name: "Vidraceiro", icon: "ü™ü" },
  { name: "Pedreiro", icon: "üß±" },
  { name: "Azulejista", icon: "üî≤" },
  { name: "Gesseiro", icon: "‚¨ú" },
  { name: "Carpinteiro", icon: "ü™µ" },
  { name: "Tapeceiro", icon: "üõãÔ∏è" },
  { name: "Chaveiro", icon: "üîë" },
  { name: "Dedetizador", icon: "ü¶ü" },
  { name: "Limpeza Residencial", icon: "üßπ" },
  { name: "Limpeza de Piscina", icon: "üèä" },
  { name: "Instalador de Ar Condicionado", icon: "‚ùÑÔ∏è" },
  { name: "T√©cnico de Inform√°tica", icon: "üñ•Ô∏è" },
  { name: "T√©cnico de Celular", icon: "üì±" },
  { name: "T√©cnico de TV", icon: "üì∫" },
  { name: "T√©cnico de Geladeira", icon: "üßä" },
  { name: "T√©cnico de M√°quina de Lavar", icon: "üåÄ" },
  { name: "Motorista Particular", icon: "üöó" },
  { name: "Entregador", icon: "üì¶" },
  { name: "Mudan√ßas", icon: "üöö" },
  { name: "Seguran√ßa Particular", icon: "üõ°Ô∏è" },
  { name: "Detetive Particular", icon: "üïµÔ∏è" },
  { name: "Tradutor", icon: "üåê" },
  { name: "Int√©rprete", icon: "üó£Ô∏è" },
  { name: "Redator", icon: "‚úçÔ∏è" },
  { name: "Revisor de Textos", icon: "üìù" },
  { name: "Editor de V√≠deo", icon: "üé¨" },
  { name: "Cinegrafista", icon: "üé•" },
  { name: "DJ", icon: "üéß" },
  { name: "M√∫sico", icon: "üé∏" },
  { name: "Cantor", icon: "üé§" },
  { name: "Ator", icon: "üé≠" },
  { name: "Modelo", icon: "üëó" },
  { name: "Animador de Festas", icon: "üéâ" },
  { name: "M√°gico", icon: "üé©" },
  { name: "Palha√ßo", icon: "ü§°" },
  { name: "Organizador de Eventos", icon: "üéä" },
  { name: "Decorador", icon: "üéÄ" },
  { name: "Florista", icon: "üíê" },
  { name: "Paisagista", icon: "üå≥" },
  { name: "Adestrador de C√£es", icon: "üêï" },
  { name: "Pet Sitter", icon: "üê∂" },
  { name: "Dog Walker", icon: "ü¶Æ" },
  { name: "Tosador de Animais", icon: "‚úÇÔ∏è" },
  { name: "Instrutor de Yoga", icon: "üßò" },
  { name: "Instrutor de Pilates", icon: "ü§∏" },
  { name: "Instrutor de Dan√ßa", icon: "üíÉ" },
  { name: "Instrutor de Nata√ß√£o", icon: "üèä" },
  { name: "Instrutor de Artes Marciais", icon: "ü•ã" },
  { name: "Coach de Vida", icon: "üéØ" },
  { name: "Coach Esportivo", icon: "üèÉ" },
  { name: "Terapeuta Hol√≠stico", icon: "üîÆ" },
  { name: "Acupunturista", icon: "üíâ" },
  { name: "Quiropraxista", icon: "ü¶¥" },
  { name: "Pod√≥logo", icon: "ü¶∂" },
  { name: "Esteticista", icon: "‚ú®" },
  { name: "Depilador", icon: "ü™í" },
  { name: "Designer de Sobrancelhas", icon: "üëÅÔ∏è" },
  { name: "Tatuador", icon: "üñäÔ∏è" },
  { name: "Piercer", icon: "üíé" },
  { name: "Consultor de Imagem", icon: "üëî" },
  { name: "Personal Stylist", icon: "üëó" },
  { name: "Personal Organizer", icon: "üìã" },
  { name: "Despachante", icon: "üìÑ" },
  { name: "Corretor de Im√≥veis", icon: "üè†" },
  { name: "Corretor de Seguros", icon: "üõ°Ô∏è" },
  { name: "Avaliador de Im√≥veis", icon: "üìê" },
  { name: "S√≠ndico Profissional", icon: "üè¢" },
  { name: "Zelador", icon: "üîß" },
  { name: "Porteiro", icon: "üö™" },
];

// TODAS AS 27 CAPITAIS + principais cidades por estado
const CITIES_BY_STATE = {
  "AC": ["Rio Branco", "Cruzeiro do Sul", "Sena Madureira"],
  "AL": ["Macei√≥", "Arapiraca", "Palmeira dos √çndios", "Rio Largo"],
  "AP": ["Macap√°", "Santana", "Laranjal do Jari"],
  "AM": ["Manaus", "Parintins", "Itacoatiara", "Manacapuru"],
  "BA": ["Salvador", "Feira de Santana", "Vit√≥ria da Conquista", "Cama√ßari", "Itabuna", "Juazeiro", "Lauro de Freitas", "Ilh√©us", "Jequi√©", "Teixeira de Freitas"],
  "CE": ["Fortaleza", "Caucaia", "Juazeiro do Norte", "Maracana√∫", "Sobral", "Crato", "Itapipoca", "Maranguape"],
  "DF": ["Bras√≠lia", "Taguatinga", "Ceil√¢ndia", "Samambaia", "Planaltina"],
  "ES": ["Vit√≥ria", "Vila Velha", "Serra", "Cariacica", "Cachoeiro de Itapemirim", "Linhares", "Colatina"],
  "GO": ["Goi√¢nia", "Aparecida de Goi√¢nia", "An√°polis", "Rio Verde", "Luzi√¢nia", "√Åguas Lindas de Goi√°s", "Valpara√≠so de Goi√°s"],
  "MA": ["S√£o Lu√≠s", "Imperatriz", "S√£o Jos√© de Ribamar", "Timon", "Caxias", "Cod√≥", "Pa√ßo do Lumiar"],
  "MT": ["Cuiab√°", "V√°rzea Grande", "Rondon√≥polis", "Sinop", "Tangar√° da Serra", "C√°ceres"],
  "MS": ["Campo Grande", "Dourados", "Tr√™s Lagoas", "Corumb√°", "Ponta Por√£", "Nova Andradina"],
  "MG": ["Belo Horizonte", "Uberl√¢ndia", "Contagem", "Juiz de Fora", "Betim", "Montes Claros", "Ribeir√£o das Neves", "Uberaba", "Governador Valadares", "Ipatinga", "Sete Lagoas", "Divin√≥polis", "Santa Luzia", "Ibirit√©", "Po√ßos de Caldas", "Patos de Minas", "Pouso Alegre", "Te√≥filo Otoni", "Barbacena", "Sabar√°"],
  "PA": ["Bel√©m", "Ananindeua", "Santar√©m", "Marab√°", "Castanhal", "Parauapebas", "Itaituba"],
  "PB": ["Jo√£o Pessoa", "Campina Grande", "Santa Rita", "Patos", "Bayeux", "Sousa", "Cajazeiras"],
  "PR": ["Curitiba", "Londrina", "Maring√°", "Ponta Grossa", "Cascavel", "S√£o Jos√© dos Pinhais", "Foz do Igua√ßu", "Colombo", "Guarapuava", "Paranagu√°", "Arauc√°ria", "Toledo", "Apucarana"],
  "PE": ["Recife", "Jaboat√£o dos Guararapes", "Olinda", "Caruaru", "Petrolina", "Paulista", "Cabo de Santo Agostinho", "Camaragibe", "Garanhuns", "Vit√≥ria de Santo Ant√£o"],
  "PI": ["Teresina", "Parna√≠ba", "Picos", "Floriano", "Piripiri"],
  "RJ": ["Rio de Janeiro", "S√£o Gon√ßalo", "Duque de Caxias", "Nova Igua√ßu", "Niter√≥i", "Belford Roxo", "S√£o Jo√£o de Meriti", "Campos dos Goytacazes", "Petr√≥polis", "Volta Redonda", "Mag√©", "Itabora√≠", "Maca√©", "Cabo Frio", "Nova Friburgo", "Barra Mansa", "Angra dos Reis", "Resende"],
  "RN": ["Natal", "Mossor√≥", "Parnamirim", "S√£o Gon√ßalo do Amarante", "Maca√≠ba", "Cear√°-Mirim", "Caic√≥"],
  "RS": ["Porto Alegre", "Caxias do Sul", "Pelotas", "Canoas", "Santa Maria", "Gravata√≠", "Viam√£o", "Novo Hamburgo", "S√£o Leopoldo", "Rio Grande", "Alvorada", "Passo Fundo", "Sapucaia do Sul", "Uruguaiana", "Santa Cruz do Sul"],
  "RO": ["Porto Velho", "Ji-Paran√°", "Ariquemes", "Vilhena", "Cacoal"],
  "RR": ["Boa Vista", "Rorain√≥polis", "Caracara√≠"],
  "SC": ["Florian√≥polis", "Joinville", "Blumenau", "S√£o Jos√©", "Crici√∫ma", "Chapec√≥", "Itaja√≠", "Jaragu√° do Sul", "Lages", "Palho√ßa", "Balne√°rio Cambori√∫", "Brusque"],
  "SP": ["S√£o Paulo", "Guarulhos", "Campinas", "S√£o Bernardo do Campo", "Santo Andr√©", "Osasco", "S√£o Jos√© dos Campos", "Ribeir√£o Preto", "Sorocaba", "Mau√°", "S√£o Jos√© do Rio Preto", "Santos", "Mogi das Cruzes", "Diadema", "Jundia√≠", "Carapicu√≠ba", "Piracicaba", "Bauru", "Itaquaquecetuba", "S√£o Vicente", "Franca", "Guaruj√°", "Taubat√©", "Praia Grande", "Limeira", "Suzano", "Tabo√£o da Serra", "Sumar√©", "Barueri", "Embu das Artes", "S√£o Carlos", "Mar√≠lia", "Indaiatuba", "Cotia", "Americana", "Jacare√≠", "Araraquara", "Presidente Prudente", "Hortol√¢ndia"],
  "SE": ["Aracaju", "Nossa Senhora do Socorro", "Lagarto", "Itabaiana", "Est√¢ncia"],
  "TO": ["Palmas", "Aragua√≠na", "Gurupi", "Porto Nacional"],
};

// Verificar se todas as 27 capitais est√£o presentes
const CAPITAIS = [
  "Rio Branco", "Macei√≥", "Macap√°", "Manaus", "Salvador", "Fortaleza", 
  "Bras√≠lia", "Vit√≥ria", "Goi√¢nia", "S√£o Lu√≠s", "Cuiab√°", "Campo Grande",
  "Belo Horizonte", "Bel√©m", "Jo√£o Pessoa", "Curitiba", "Recife", "Teresina",
  "Rio de Janeiro", "Natal", "Porto Alegre", "Porto Velho", "Boa Vista",
  "Florian√≥polis", "S√£o Paulo", "Aracaju", "Palmas"
];

console.log("üèõÔ∏è  Verificando capitais...");
const allCities = Object.values(CITIES_BY_STATE).flat();
const missingCapitals = CAPITAIS.filter(cap => !allCities.includes(cap));
if (missingCapitals.length > 0) {
  console.error(`‚ùå Capitais faltando: ${missingCapitals.join(", ")}`);
} else {
  console.log("‚úÖ Todas as 27 capitais presentes!");
}

// Nomes brasileiros realistas
const FIRST_NAMES = [
  "Ana", "Jo√£o", "Maria", "Pedro", "Carla", "Lucas", "Juliana", "Rafael", "Beatriz", "Gabriel",
  "Fernanda", "Thiago", "Amanda", "Bruno", "Camila", "Diego", "Larissa", "Matheus", "Patr√≠cia", "Rodrigo",
  "Mariana", "Felipe", "Isabela", "Gustavo", "Let√≠cia", "Henrique", "Nat√°lia", "Vin√≠cius", "Bruna", "Leonardo",
  "Aline", "Marcelo", "Daniela", "Andr√©", "Bianca", "F√°bio", "Renata", "Ricardo", "Vanessa", "M√°rcio",
  "Tatiana", "Alexandre", "Priscila", "Eduardo", "Cristina", "Maur√≠cio", "Simone", "S√©rgio", "Sandra", "Paulo",
  "Cl√°udia", "Roberto", "Adriana", "Carlos", "M√¥nica", "Jos√©", "Luciana", "Ant√¥nio", "Elaine", "Francisco",
  "M√°rcia", "Luiz", "Regina", "Fernando", "Silvia", "Jorge", "Vera", "Marcos", "S√¥nia", "Manoel",
  "Teresa", "Raimundo", "Ros√¢ngela", "Sebasti√£o", "Aparecida", "Geraldo", "L√∫cia", "Joaquim", "Marta", "Benedito",
];

const LAST_NAMES = [
  "Silva", "Santos", "Oliveira", "Souza", "Costa", "Ferreira", "Rodrigues", "Alves", "Pereira", "Lima",
  "Gomes", "Ribeiro", "Martins", "Carvalho", "Rocha", "Almeida", "Ara√∫jo", "Fernandes", "Barbosa", "Cardoso",
  "Nascimento", "Castro", "Dias", "Monteiro", "Mendes", "Freitas", "Moreira", "Pinto", "Cavalcanti", "Vieira",
  "Ramos", "Correia", "Teixeira", "Reis", "Miranda", "Nunes", "Soares", "Azevedo", "Campos", "Moura",
];

const BIOS = [
  "Profissional experiente com mais de 10 anos de mercado. Atendimento personalizado e qualidade garantida.",
  "Especialista dedicado em oferecer o melhor servi√ßo. Satisfa√ß√£o do cliente √© minha prioridade.",
  "Trabalho com excel√™ncia e compromisso. Resultados que superam expectativas.",
  "Atendimento humanizado e profissional. Sua confian√ßa √© meu maior patrim√¥nio.",
  "Qualidade, pontualidade e pre√ßo justo. Fa√ßa seu or√ßamento sem compromisso.",
  "Anos de experi√™ncia e clientes satisfeitos. Conte comigo para realizar seu projeto.",
  "Profissional certificado e qualificado. Trabalho s√©rio e comprometido.",
  "Atendo com hora marcada. Or√ßamento gratuito e sem compromisso.",
  "Servi√ßo de qualidade com garantia. Sua satisfa√ß√£o √© minha meta.",
  "Refer√™ncias dispon√≠veis. Trabalho com transpar√™ncia e honestidade.",
];

function rand<T>(arr: T[]): T {
  return arr[Math.floor(Math.random() * arr.length)];
}

function uid(): string {
  return Math.random().toString(36).slice(2, 10);
}

function randomPhone(ddd: string): string {
  return `(${ddd}) 9${Math.floor(1000 + Math.random() * 9000)}-${Math.floor(1000 + Math.random() * 9000)}`;
}

function getRandomName(): string {
  return `${rand(FIRST_NAMES)} ${rand(LAST_NAMES)}`;
}

// DDDs por estado
const DDD_BY_STATE: Record<string, string[]> = {
  "AC": ["68"],
  "AL": ["82"],
  "AP": ["96"],
  "AM": ["92", "97"],
  "BA": ["71", "73", "74", "75", "77"],
  "CE": ["85", "88"],
  "DF": ["61"],
  "ES": ["27", "28"],
  "GO": ["62", "64"],
  "MA": ["98", "99"],
  "MT": ["65", "66"],
  "MS": ["67"],
  "MG": ["31", "32", "33", "34", "35", "37", "38"],
  "PA": ["91", "93", "94"],
  "PB": ["83"],
  "PR": ["41", "42", "43", "44", "45", "46"],
  "PE": ["81", "87"],
  "PI": ["86", "89"],
  "RJ": ["21", "22", "24"],
  "RN": ["84"],
  "RS": ["51", "53", "54", "55"],
  "RO": ["69"],
  "RR": ["95"],
  "SC": ["47", "48", "49"],
  "SP": ["11", "12", "13", "14", "15", "16", "17", "18", "19"],
  "SE": ["79"],
  "TO": ["63"],
};

async function main() {
  console.log("üå± Starting full seed with ALL 27 Brazilian capitals...");

  // Verificar profissionais existentes
  const existing = await db.select().from(professionals);
  console.log(`üìä Found ${existing.length} existing professionals`);
  
  if (existing.length >= 500) {
    console.log("‚úÖ Database already has enough professionals. Skipping seed.");
    return;
  }

  console.log("üìç Ensuring all 27 capitals have professionals...");
  
  // Garantir pelo menos 5 profissionais em cada capital
  for (const state of Object.keys(CITIES_BY_STATE)) {
    const cities = CITIES_BY_STATE[state];
    const capital = cities[0]; // Primeira cidade √© sempre a capital
    
    for (let i = 0; i < 5; i++) {
      const ddd = rand(DDD_BY_STATE[state]);
      const trialEndsAt = new Date();
      trialEndsAt.setDate(trialEndsAt.getDate() + Math.floor(1 + Math.random() * 7));
      
      const category = rand(CATEGORIES_DATA);
      const phone = randomPhone(ddd);
      const name = getRandomName();
      const galleryPhotos = [];
      for (let j = 0; j < Math.floor(2 + Math.random() * 4); j++) {
        galleryPhotos.push(`https://picsum.photos/800/600?random=${Date.now()}-${j}`);
      }
      
      await db.insert(professionals).values({
        uid: uid(),
        displayName: name,
        category: category.name,
        city: `${capital} - ${state}`,
        phone: phone,
        whatsapp: phone,
        email: `${name.toLowerCase().replace(/\s+/g, ".")}@email.com`,
        bio: rand(BIOS),
        photoUrl: `https://i.pravatar.cc/300?img=${Math.floor(Math.random() * 70) + 1}`,
        galleryPhotos: JSON.stringify(galleryPhotos),
        instagramVideoUrl: i % 4 === 0 ? "https://www.instagram.com/reel/example/" : null,
        instagramHandle: i % 3 === 0 ? `@${name.toLowerCase().replace(/\s+/g, "_")}` : null,
        stars: Math.floor(35 + Math.random() * 15),
        reviewCount: Math.floor(5 + Math.random() * 95),
        badge: i % 3 === 0 ? "verified" : i % 5 === 0 ? "trusted" : "none",
        planType: i % 5 === 0 ? "destaque" : "base",
        trialEndsAt: trialEndsAt,
        subscriptionEndsAt: null,
        isActive: true,
      });
    }
  }
  
  console.log("‚úÖ All 27 capitals now have professionals!");
  console.log(`üìç Covered ${Object.keys(CITIES_BY_STATE).length} states`);
  console.log(`üèôÔ∏è  Covering ${allCities.length} cities`);
  console.log(`üíº ${CATEGORIES_DATA.length} professional categories`);
}

main()
  .catch((error) => {
    console.error("‚ùå Seed failed:", error);
    process.exit(1);
  })
  .then(() => {
    process.exit(0);
  });

